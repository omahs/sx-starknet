/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  StarknetSpaceManager,
  StarknetSpaceManagerInterface,
} from "../../../../contracts/ethereum/ZodiacModule/StarknetSpaceManager";

const _abi = [
  {
    inputs: [],
    name: "InvalidSpace",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "SpaceDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "SpaceEnabled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "disableSpace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "enableSpace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "isSpaceEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806352915aa2146100675780636c1067e91461007c578063715018a61461008f5780638da5cb5b14610097578063e8aca453146100bc578063f2fde38b146100ef575b600080fd5b61007a61007536600461036a565b610102565b005b61007a61008a36600461036a565b61018c565b61007a610218565b61009f61022c565b6040516001600160a01b0390911681526020015b60405180910390f35b6100df6100ca36600461036a565b60009081526065602052604090205460ff1690565b60405190151581526020016100b3565b61007a6100fd366004610383565b61023b565b61010a6102b9565b60008181526065602052604090205460ff166101395760405163c3b48cf160e01b815260040160405180910390fd5b60008181526065602052604090819020805460ff19169055517f74d5daeae1a5cd3f007ca1551ac8699aa3098c866fd647b9e397120e98cb98a0906101819083815260200190565b60405180910390a150565b6101946102b9565b8015806101af575060008181526065602052604090205460ff165b156101cd5760405163c3b48cf160e01b815260040160405180910390fd5b60008181526065602052604090819020805460ff19166001179055517f4b9bd286a0bdefb75bd30d4b6547c115882017ce775c1388e88e8dcedee05bc0906101819083815260200190565b6102206102b9565b61022a6000610318565b565b6033546001600160a01b031690565b6102436102b9565b6001600160a01b0381166102ad5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6102b681610318565b50565b336102c261022c565b6001600160a01b03161461022a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a4565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561037c57600080fd5b5035919050565b60006020828403121561039557600080fd5b81356001600160a01b03811681146103ac57600080fd5b939250505056fea2646970667358221220126c53653506686389eec99223a05caa86eefa74e6363ddb509250067237abe364736f6c63430008110033";

type StarknetSpaceManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StarknetSpaceManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StarknetSpaceManager__factory extends ContractFactory {
  constructor(...args: StarknetSpaceManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StarknetSpaceManager> {
    return super.deploy(overrides || {}) as Promise<StarknetSpaceManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StarknetSpaceManager {
    return super.attach(address) as StarknetSpaceManager;
  }
  override connect(signer: Signer): StarknetSpaceManager__factory {
    return super.connect(signer) as StarknetSpaceManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StarknetSpaceManagerInterface {
    return new utils.Interface(_abi) as StarknetSpaceManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StarknetSpaceManager {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StarknetSpaceManager;
  }
}
