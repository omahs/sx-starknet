/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  SnapshotXProposalRelayer,
  SnapshotXProposalRelayerInterface,
} from "../../../../../contracts/ethereum/ZodiacModule/ProposalRelayer.sol/SnapshotXProposalRelayer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "guard_",
        type: "address",
      },
    ],
    name: "NotIERC165Compliant",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "guard",
        type: "address",
      },
    ],
    name: "ChangedGuard",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_l2ExecutionRelayer",
        type: "uint256",
      },
    ],
    name: "ChangedL2ExecutionRelayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_l2ExecutionRelayer",
        type: "uint256",
      },
    ],
    name: "changeL2ExecutionRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getGuard",
    outputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "guard",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2ExecutionRelayer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_guard",
        type: "address",
      },
    ],
    name: "setGuard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "starknetCore",
    outputs: [
      {
        internalType: "contract MockStarknetMessaging",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610477806100206000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c806339e730ab146100885780633b0def76146100b15780635394b400146100c8578063715018a6146100dd5780637ceab3b1146100e55780638da5cb5b146100f8578063c910638914610100578063e19a9dd914610111578063f2fde38b14610124575b600080fd5b60665461009b906001600160a01b031681565b6040516100a891906103c2565b60405180910390f35b6100ba60675481565b6040519081526020016100a8565b6100db6100d63660046103d6565b610137565b005b6100db61017b565b60655461009b906001600160a01b031681565b61009b61018f565b6065546001600160a01b031661009b565b6100db61011f3660046103ef565b61019e565b6100db6101323660046103ef565b610298565b61013f610311565b60678190556040518181527fc81482cec227d3b66d5367928153ef6affe135059868a5538b27ada88e3f3b1d906020015b60405180910390a150565b610183610311565b61018d6000610370565b565b6033546001600160a01b031690565b6101a6610311565b6001600160a01b0381161561024c576040516301ffc9a760e01b815263736bd41d60e11b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610224919061041f565b61024c57806040516358b7533f60e11b815260040161024391906103c2565b60405180910390fd5b606580546001600160a01b0319166001600160a01b0383169081179091556040517f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa291610170916103c2565b6102a0610311565b6001600160a01b0381166103055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610243565b61030e81610370565b50565b3361031a61018f565b6001600160a01b03161461018d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610243565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0391909116815260200190565b6000602082840312156103e857600080fd5b5035919050565b60006020828403121561040157600080fd5b81356001600160a01b038116811461041857600080fd5b9392505050565b60006020828403121561043157600080fd5b8151801515811461041857600080fdfea2646970667358221220e3176de6a4e22960d2ff55e1d65238cd4b400ef672a584f51872d8288954809964736f6c63430008110033";

type SnapshotXProposalRelayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnapshotXProposalRelayerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SnapshotXProposalRelayer__factory extends ContractFactory {
  constructor(...args: SnapshotXProposalRelayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SnapshotXProposalRelayer> {
    return super.deploy(overrides || {}) as Promise<SnapshotXProposalRelayer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SnapshotXProposalRelayer {
    return super.attach(address) as SnapshotXProposalRelayer;
  }
  override connect(signer: Signer): SnapshotXProposalRelayer__factory {
    return super.connect(signer) as SnapshotXProposalRelayer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnapshotXProposalRelayerInterface {
    return new utils.Interface(_abi) as SnapshotXProposalRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SnapshotXProposalRelayer {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SnapshotXProposalRelayer;
  }
}
