/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L1Executor,
  L1ExecutorInterface,
} from "../../../../contracts/ethereum/ZodiacModule/L1Executor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_starknetCore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_l2ExecutionRelayer",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_starknetSpaces",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidExecutionParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSpace",
    type: "error",
  },
  {
    inputs: [],
    name: "TransactionsFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newExecutionRelayer",
        type: "uint256",
      },
    ],
    name: "ExecutionRelayerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
    ],
    name: "ProposalCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
    ],
    name: "ProposalReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_l2ExecutionRelayer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_starknetCore",
        type: "address",
      },
    ],
    name: "SnapshotXL1ExecutorSetUpComplete",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "SpaceDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "SpaceEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newTarget",
        type: "address",
      },
    ],
    name: "TargetSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
    ],
    name: "TransactionExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "disableSpace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "enableSpace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callerAddress",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalOutcome",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionHashLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionHashHigh",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "executionParams",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executionRelayer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "isSpaceEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_executionRelayer",
        type: "uint256",
      },
    ],
    name: "setExecutionRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "starknetCore",
    outputs: [
      {
        internalType: "contract MockStarknetMessaging",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200192d3803806200192d8339810160408190526200003491620005c5565b600085858585856040516020016200005195949392919062000650565b60408051601f1981840301815291905290506200006e816200007a565b5050505050506200079d565b600054610100900460ff16158080156200009b5750600054600160ff909116105b80620000cb5750620000b8306200021b60201b620006211760201c565b158015620000cb575060005460ff166001145b620000f35760405162461bcd60e51b8152600401620000ea90620006c6565b60405180910390fd5b6000805460ff19166001179055801562000117576000805461ff0019166101001790555b600080600080600086806020019051810190620001359190620005c5565b945094509450945094506200014f6200022a60201b60201c565b6200015a8562000260565b6200016581620002df565b606680546001600160a01b038681166001600160a01b0319928316811790935560678054878316931683179055606885905560408051938452602084018690528301919091528616907fcf5d0b99f6785b9f1b3d582d35b80fa68442ad024539034ee2e3eb17ac371b359060600160405180910390a25050505050801562000217576000805461ff0019169055604051600181526000805160206200190d833981519152906020015b60405180910390a15b5050565b6001600160a01b03163b151590565b600054610100900460ff16620002545760405162461bcd60e51b8152600401620000ea9062000714565b6200025e62000412565b565b6200026a62000447565b6001600160a01b038116620002d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000ea565b620002dc81620004a3565b50565b600054610100900460ff1615808015620003005750600054600160ff909116105b806200033057506200031d306200021b60201b620006211760201c565b15801562000330575060005460ff166001145b6200034f5760405162461bcd60e51b8152600401620000ea90620006c6565b6000805460ff19166001179055801562000373576000805461ff0019166101001790555b60005b8251811015620003de576001606560008584815181106200039b576200039b6200075f565b6020026020010151815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620003d59062000775565b91505062000376565b50801562000217576000805461ff0019169055604051600181526000805160206200190d833981519152906020016200020e565b600054610100900460ff166200043c5760405162461bcd60e51b8152600401620000ea9062000714565b6200025e33620004a3565b6033546001600160a01b031633146200025e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620000ea565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381168114620002dc57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200053357600080fd5b815160206001600160401b03808311156200055257620005526200050b565b8260051b604051601f19603f830116810181811084821117156200057a576200057a6200050b565b6040529384528581018301938381019250878511156200059957600080fd5b83870191505b84821015620005ba578151835291830191908301906200059f565b979650505050505050565b600080600080600060a08688031215620005de57600080fd5b8551620005eb81620004f5565b6020870151909550620005fe81620004f5565b60408701519094506200061181620004f5565b6060870151608088015191945092506001600160401b038111156200063557600080fd5b620006438882890162000521565b9150509295509295909350565b6001600160a01b03868116825285811660208084019190915290851660408301526060820184905260a06080830181905283519083018190526000918481019160c085019190845b81811015620006b65784518452938201939282019260010162000698565b50919a9950505050505050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000600182016200079657634e487b7160e01b600052601160045260246000fd5b5060010190565b61116080620007ad6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806339e730ab146100b457806352915aa2146100e45780636c1067e9146100f9578063715018a61461010c578063776d1a01146101145780638da5cb5b14610127578063a4f9edbf1461012f578063c5a3f53214610142578063c90e2dac14610159578063d4b839921461016c578063db9926ef1461017f578063e8aca45314610192578063f2fde38b146101c5575b600080fd5b6067546100c7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f76100f2366004610ac2565b6101d8565b005b6100f7610107366004610ac2565b610262565b6100f76102ee565b6100f7610122366004610af0565b610302565b6100c7610354565b6100f761013d366004610bff565b610363565b61014b60685481565b6040519081526020016100db565b6100f7610167366004610c3b565b6104e0565b6066546100c7906001600160a01b031681565b6100f761018d366004610ac2565b61056d565b6101b56101a0366004610ac2565b60009081526065602052604090205460ff1690565b60405190151581526020016100db565b6100f76101d3366004610af0565b6105a8565b6101e0610630565b60008181526065602052604090205460ff1661020f5760405163c3b48cf160e01b815260040160405180910390fd5b60008181526065602052604090819020805460ff19169055517f74d5daeae1a5cd3f007ca1551ac8699aa3098c866fd647b9e397120e98cb98a0906102579083815260200190565b60405180910390a150565b61026a610630565b801580610285575060008181526065602052604090205460ff165b156102a35760405163c3b48cf160e01b815260040160405180910390fd5b60008181526065602052604090819020805460ff19166001179055517f4b9bd286a0bdefb75bd30d4b6547c115882017ce775c1388e88e8dcedee05bc0906102579083815260200190565b6102f6610630565b610300600061068f565b565b61030a610630565b606680546001600160a01b0319166001600160a01b0383169081179091556040517f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a19690600090a250565b6033546001600160a01b031690565b600054610100900460ff16158080156103835750600054600160ff909116105b806103a4575061039230610621565b1580156103a4575060005460ff166001145b6103c95760405162461bcd60e51b81526004016103c090610c9e565b60405180910390fd5b6000805460ff1916600117905580156103ec576000805461ff0019166101001790555b6000806000806000868060200190518101906104089190610d0f565b9450945094509450945061041a6106e1565b610423856105a8565b61042c81610710565b606680546001600160a01b038681166001600160a01b0319928316811790935560678054878316931683179055606885905560408051938452602084018690528301919091528616907fcf5d0b99f6785b9f1b3d582d35b80fa68442ad024539034ee2e3eb17ac371b359060600160405180910390a2505050505080156104dc576000805461ff00191690556040516001815260008051602061110b833981519152906020015b60405180910390a15b5050565b600085815260656020526040902054859060ff166105115760405163c3b48cf160e01b815260040160405180910390fd5b61051d86868686610825565b600061052d85608086901b610dfd565b83516020850120909150811461055657604051634a82679960e01b815260040160405180910390fd5b856105645761056483610944565b50505050505050565b610575610630565b606881905560405181907f53aa68529dff3180c91e31b31e62906e030b1c11976c17e3741165c09aa127e090600090a250565b6105b0610630565b6001600160a01b0381166106155760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103c0565b61061e8161068f565b50565b6001600160a01b03163b151590565b33610639610354565b6001600160a01b0316146103005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103c0565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107085760405162461bcd60e51b81526004016103c090610e16565b610300610a92565b600054610100900460ff16158080156107305750600054600160ff909116105b80610751575061073f30610621565b158015610751575060005460ff166001145b61076d5760405162461bcd60e51b81526004016103c090610c9e565b6000805460ff191660011790558015610790576000805461ff0019166101001790555b60005b82518110156107f4576001606560008584815181106107b4576107b4610e61565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806107ec90610e77565b915050610793565b5080156104dc576000805461ff00191690556040516001815260008051602061110b833981519152906020016104d3565b60408051600480825260a0820190925260009160208201608080368337019050509050848160008151811061085c5761085c610e61565b602002602001018181525050838160018151811061087c5761087c610e61565b602002602001018181525050828160028151811061089c5761089c610e61565b60200260200101818152505081816003815181106108bc576108bc610e61565b602090810291909101015260675460685460405162b2775760e61b81526001600160a01b0390921691632c9dd5c0916108f9918590600401610e90565b6020604051808303816000875af1158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190610ede565b505050505050565b60008180602001905181019061095a9190610f2f565b905060005b8151811015610a8d5760665482516000916001600160a01b03169063468721a79085908590811061099257610992610e61565b6020026020010151600001518585815181106109b0576109b0610e61565b6020026020010151602001518686815181106109ce576109ce610e61565b6020026020010151604001518787815181106109ec576109ec610e61565b6020026020010151606001516040518563ffffffff1660e01b8152600401610a17949392919061107a565b6020604051808303816000875af1158015610a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5a91906110e8565b905080610a7a576040516350e006fd60e01b815260040160405180910390fd5b5080610a8581610e77565b91505061095f565b505050565b600054610100900460ff16610ab95760405162461bcd60e51b81526004016103c090610e16565b6103003361068f565b600060208284031215610ad457600080fd5b5035919050565b6001600160a01b038116811461061e57600080fd5b600060208284031215610b0257600080fd5b8135610b0d81610adb565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715610b4c57610b4c610b14565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610b7a57610b7a610b14565b604052919050565b60006001600160401b03821115610b9b57610b9b610b14565b50601f01601f191660200190565b600082601f830112610bba57600080fd5b8135610bcd610bc882610b82565b610b52565b818152846020838601011115610be257600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610c1157600080fd5b81356001600160401b03811115610c2757600080fd5b610c3384828501610ba9565b949350505050565b600080600080600060a08688031215610c5357600080fd5b8535945060208601359350604086013592506060860135915060808601356001600160401b03811115610c8557600080fd5b610c9188828901610ba9565b9150509295509295909350565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006001600160401b03821115610d0557610d05610b14565b5060051b60200190565b600080600080600060a08688031215610d2757600080fd5b8551610d3281610adb565b80955050602080870151610d4581610adb565b6040880151909550610d5681610adb565b6060880151608089015191955093506001600160401b03811115610d7957600080fd5b8701601f81018913610d8a57600080fd5b8051610d98610bc882610cec565b81815260059190911b8201830190838101908b831115610db757600080fd5b928401925b82841015610dd557835182529284019290840190610dbc565b80955050505050509295509295909350565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e1057610e10610de7565b92915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201610e8957610e89610de7565b5060010190565b6000604082018483526020604081850152818551808452606086019150828701935060005b81811015610ed157845183529383019391830191600101610eb5565b5090979650505050505050565b600060208284031215610ef057600080fd5b5051919050565b60005b83811015610f12578181015183820152602001610efa565b50506000910152565b805160028110610f2a57600080fd5b919050565b60006020808385031215610f4257600080fd5b82516001600160401b0380821115610f5957600080fd5b818501915085601f830112610f6d57600080fd5b8151610f7b610bc882610cec565b81815260059190911b83018401908481019088831115610f9a57600080fd5b8585015b8381101561106d57805185811115610fb557600080fd5b86016080818c03601f19011215610fcb57600080fd5b610fd3610b2a565b88820151610fe081610adb565b81526040828101518a830152606083015188811115610fff5760008081fd5b8301603f81018e136110115760008081fd5b8a810151611021610bc882610b82565b8181528f848385010111156110365760008081fd5b611045828e8301868601610ef7565b80848601525050505061105a60808301610f1b565b6060820152845250918601918601610f9e565b5098975050505050505050565b60018060a01b038516815283602082015260806040820152600083518060808401526110ad8160a0850160208801610ef7565b601f01601f1916820160a0019050600283106110d957634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b6000602082840312156110fa57600080fd5b81518015158114610b0d57600080fdfe7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498a2646970667358221220d46104f25723788526ae0ea432b746a8a9ca3f5eafff6bfa305b803dc0ba7dba64736f6c634300081100337f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498";

type L1ExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1ExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1Executor__factory extends ContractFactory {
  constructor(...args: L1ExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _target: PromiseOrValue<string>,
    _starknetCore: PromiseOrValue<string>,
    _l2ExecutionRelayer: PromiseOrValue<BigNumberish>,
    _starknetSpaces: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1Executor> {
    return super.deploy(
      _owner,
      _target,
      _starknetCore,
      _l2ExecutionRelayer,
      _starknetSpaces,
      overrides || {}
    ) as Promise<L1Executor>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _target: PromiseOrValue<string>,
    _starknetCore: PromiseOrValue<string>,
    _l2ExecutionRelayer: PromiseOrValue<BigNumberish>,
    _starknetSpaces: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _target,
      _starknetCore,
      _l2ExecutionRelayer,
      _starknetSpaces,
      overrides || {}
    );
  }
  override attach(address: string): L1Executor {
    return super.attach(address) as L1Executor;
  }
  override connect(signer: Signer): L1Executor__factory {
    return super.connect(signer) as L1Executor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1ExecutorInterface {
    return new utils.Interface(_abi) as L1ExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1Executor {
    return new Contract(address, _abi, signerOrProvider) as L1Executor;
  }
}
