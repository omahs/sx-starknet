/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  SXAvatarExecutor,
  SXAvatarExecutorInterface,
} from "../../../../contracts/ethereum/ZodiacModule/SXAvatarExecutor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        internalType: "address",
        name: "_starknetCore",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_executionRelayer",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_starknetSpaces",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidExecutionParams",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSpace",
    type: "error",
  },
  {
    inputs: [],
    name: "TransactionsFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newExecutionRelayer",
        type: "uint256",
      },
    ],
    name: "ExecutionRelayerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_starknetCore",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_executionRelayer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_starknetSpaces",
        type: "uint256[]",
      },
    ],
    name: "SXAvatarExecutorSetUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "SpaceDisabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "SpaceEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newTarget",
        type: "address",
      },
    ],
    name: "TargetSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "disableSpace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "enableSpace",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "callerAddress",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalOutcome",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionHashLow",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "executionHashHigh",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "executionParams",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "executionRelayer",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "space",
        type: "uint256",
      },
    ],
    name: "isSpaceEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_executionRelayer",
        type: "uint256",
      },
    ],
    name: "setExecutionRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_target",
        type: "address",
      },
    ],
    name: "setTarget",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initParams",
        type: "bytes",
      },
    ],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "starknetCore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200193038038062001930833981016040819052620000349162000601565b6000858585858560405160200162000051959493929190620006c9565b60408051601f1981840301815291905290506200006e816200007a565b505050505050620007ce565b600054610100900460ff16158080156200009b5750600054600160ff909116105b80620000cb5750620000b8306200026d60201b620006651760201c565b158015620000cb575060005460ff166001145b620001345760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000158576000805461ff0019166101001790555b60008060008060008680602001905181019062000176919062000601565b94509450945094509450620001906200027c60201b60201c565b6200019b85620002b2565b620001a68162000331565b606680546001600160a01b038087166001600160a01b0319928316179092556067805486841692169190911790556068839055604051908616907fa1a82ff2cb3e9efe9ae236a0207e22c357baa1372cbc9ff348ae5b5e939045b5906200021590879087908790879062000706565b60405180910390a25050505050801562000269576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03163b151590565b600054610100900460ff16620002a65760405162461bcd60e51b81526004016200012b9062000745565b620002b062000439565b565b620002bc6200046e565b6001600160a01b038116620003235760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200012b565b6200032e81620004ca565b50565b600054610100900460ff166200035b5760405162461bcd60e51b81526004016200012b9062000745565b60005b815181101562000269578181815181106200037d576200037d62000790565b602002602001015160001480620003bc5750620003bc828281518110620003a857620003a862000790565b60200260200101516200051c60201b60201c565b15620003db5760405163c3b48cf160e01b815260040160405180910390fd5b600160656000848481518110620003f657620003f662000790565b6020026020010151815260200190815260200160002060006101000a81548160ff02191690831515021790555080806200043090620007a6565b9150506200035e565b600054610100900460ff16620004635760405162461bcd60e51b81526004016200012b9062000745565b620002b033620004ca565b6033546001600160a01b03163314620002b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200012b565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60009081526065602052604090205460ff1690565b6001600160a01b03811681146200032e57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200056f57600080fd5b815160206001600160401b03808311156200058e576200058e62000547565b8260051b604051601f19603f83011681018181108482111715620005b657620005b662000547565b604052938452858101830193838101925087851115620005d557600080fd5b83870191505b84821015620005f657815183529183019190830190620005db565b979650505050505050565b600080600080600060a086880312156200061a57600080fd5b8551620006278162000531565b60208701519095506200063a8162000531565b60408701519094506200064d8162000531565b6060870151608088015191945092506001600160401b038111156200067157600080fd5b6200067f888289016200055d565b9150509295509295909350565b600081518084526020808501945080840160005b83811015620006be57815187529582019590820190600101620006a0565b509495945050505050565b6001600160a01b0386811682528581166020830152841660408201526060810183905260a060808201819052600090620005f6908301846200068c565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906200073b908301846200068c565b9695505050505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201620007c757634e487b7160e01b600052601160045260246000fd5b5060010190565b61115280620007de6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806339e730ab146100b457806352915aa2146100e45780636c1067e9146100f9578063715018a61461010c578063776d1a01146101145780638da5cb5b14610127578063a4f9edbf1461012f578063c5a3f53214610142578063c90e2dac14610159578063d4b839921461016c578063db9926ef1461017f578063e8aca45314610192578063f2fde38b146101b5575b600080fd5b6067546100c7906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f76100f2366004610adf565b6101c8565b005b6100f7610107366004610adf565b610252565b6100f76102d4565b6100f7610122366004610b0d565b6102e8565b6100c761033a565b6100f761013d366004610c1c565b610349565b61014b60685481565b6040519081526020016100db565b6100f7610167366004610c58565b610519565b6066546100c7906001600160a01b031681565b6100f761018d366004610adf565b61059c565b6101a56101a0366004610adf565b6105d7565b60405190151581526020016100db565b6100f76101c3366004610b0d565b6105ec565b6101d0610674565b60008181526065602052604090205460ff166101ff5760405163c3b48cf160e01b815260040160405180910390fd5b60008181526065602052604090819020805460ff19169055517f74d5daeae1a5cd3f007ca1551ac8699aa3098c866fd647b9e397120e98cb98a0906102479083815260200190565b60405180910390a150565b61025a610674565b80158061026b575061026b816105d7565b156102895760405163c3b48cf160e01b815260040160405180910390fd5b60008181526065602052604090819020805460ff19166001179055517f4b9bd286a0bdefb75bd30d4b6547c115882017ce775c1388e88e8dcedee05bc0906102479083815260200190565b6102dc610674565b6102e660006106d3565b565b6102f0610674565b606680546001600160a01b0319166001600160a01b0383169081179091556040517f3bfb4bbf112628248058745a3c57e35b13369386e474b8e56c552f3063a4a19690600090a250565b6033546001600160a01b031690565b600054610100900460ff16158080156103695750600054600160ff909116105b8061038a575061037830610665565b15801561038a575060005460ff166001145b6103f25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff191660011790558015610415576000805461ff0019166101001790555b6000806000806000868060200190518101906104319190610cde565b94509450945094509450610443610725565b61044c856105ec565b61045581610754565b606680546001600160a01b038087166001600160a01b0319928316179092556067805486841692169190911790556068839055604051908616907fa1a82ff2cb3e9efe9ae236a0207e22c357baa1372cbc9ff348ae5b5e939045b5906104c2908790879087908790610df1565b60405180910390a250505050508015610515576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b84610523816105d7565b6105405760405163c3b48cf160e01b815260040160405180910390fd5b61054c86868686610842565b600061055c85608086901b610e44565b83516020850120909150811461058557604051634a82679960e01b815260040160405180910390fd5b856105935761059383610961565b50505050505050565b6105a4610674565b606881905560405181907f53aa68529dff3180c91e31b31e62906e030b1c11976c17e3741165c09aa127e090600090a250565b60009081526065602052604090205460ff1690565b6105f4610674565b6001600160a01b0381166106595760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e9565b610662816106d3565b50565b6001600160a01b03163b151590565b3361067d61033a565b6001600160a01b0316146102e65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e9565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661074c5760405162461bcd60e51b81526004016103e990610e5d565b6102e6610aaf565b600054610100900460ff1661077b5760405162461bcd60e51b81526004016103e990610e5d565b60005b81518110156105155781818151811061079957610799610ea8565b6020026020010151600014806107cc57506107cc8282815181106107bf576107bf610ea8565b60200260200101516105d7565b156107ea5760405163c3b48cf160e01b815260040160405180910390fd5b60016065600084848151811061080257610802610ea8565b6020026020010151815260200190815260200160002060006101000a81548160ff021916908315150217905550808061083a90610ebe565b91505061077e565b60408051600480825260a0820190925260009160208201608080368337019050509050848160008151811061087957610879610ea8565b602002602001018181525050838160018151811061089957610899610ea8565b60200260200101818152505082816002815181106108b9576108b9610ea8565b60200260200101818152505081816003815181106108d9576108d9610ea8565b602090810291909101015260675460685460405162b2775760e61b81526001600160a01b0390921691632c9dd5c091610916918590600401610ed7565b6020604051808303816000875af1158015610935573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109599190610ef0565b505050505050565b6000818060200190518101906109779190610f41565b905060005b8151811015610aaa5760665482516000916001600160a01b03169063468721a7908590859081106109af576109af610ea8565b6020026020010151600001518585815181106109cd576109cd610ea8565b6020026020010151602001518686815181106109eb576109eb610ea8565b602002602001015160400151878781518110610a0957610a09610ea8565b6020026020010151606001516040518563ffffffff1660e01b8152600401610a34949392919061108c565b6020604051808303816000875af1158015610a53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7791906110fa565b905080610a97576040516350e006fd60e01b815260040160405180910390fd5b5080610aa281610ebe565b91505061097c565b505050565b600054610100900460ff16610ad65760405162461bcd60e51b81526004016103e990610e5d565b6102e6336106d3565b600060208284031215610af157600080fd5b5035919050565b6001600160a01b038116811461066257600080fd5b600060208284031215610b1f57600080fd5b8135610b2a81610af8565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715610b6957610b69610b31565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610b9757610b97610b31565b604052919050565b60006001600160401b03821115610bb857610bb8610b31565b50601f01601f191660200190565b600082601f830112610bd757600080fd5b8135610bea610be582610b9f565b610b6f565b818152846020838601011115610bff57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610c2e57600080fd5b81356001600160401b03811115610c4457600080fd5b610c5084828501610bc6565b949350505050565b600080600080600060a08688031215610c7057600080fd5b8535945060208601359350604086013592506060860135915060808601356001600160401b03811115610ca257600080fd5b610cae88828901610bc6565b9150509295509295909350565b60006001600160401b03821115610cd457610cd4610b31565b5060051b60200190565b600080600080600060a08688031215610cf657600080fd5b8551610d0181610af8565b80955050602080870151610d1481610af8565b6040880151909550610d2581610af8565b6060880151608089015191955093506001600160401b03811115610d4857600080fd5b8701601f81018913610d5957600080fd5b8051610d67610be582610cbb565b81815260059190911b8201830190838101908b831115610d8657600080fd5b928401925b82841015610da457835182529284019290840190610d8b565b80955050505050509295509295909350565b600081518084526020808501945080840160005b83811015610de657815187529582019590820190600101610dca565b509495945050505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610e2490830184610db6565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610e5757610e57610e2e565b92915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600060018201610ed057610ed0610e2e565b5060010190565b828152604060208201526000610c506040830184610db6565b600060208284031215610f0257600080fd5b5051919050565b60005b83811015610f24578181015183820152602001610f0c565b50506000910152565b805160028110610f3c57600080fd5b919050565b60006020808385031215610f5457600080fd5b82516001600160401b0380821115610f6b57600080fd5b818501915085601f830112610f7f57600080fd5b8151610f8d610be582610cbb565b81815260059190911b83018401908481019088831115610fac57600080fd5b8585015b8381101561107f57805185811115610fc757600080fd5b86016080818c03601f19011215610fdd57600080fd5b610fe5610b47565b88820151610ff281610af8565b81526040828101518a8301526060830151888111156110115760008081fd5b8301603f81018e136110235760008081fd5b8a810151611033610be582610b9f565b8181528f848385010111156110485760008081fd5b611057828e8301868601610f09565b80848601525050505061106c60808301610f2d565b6060820152845250918601918601610fb0565b5098975050505050505050565b60018060a01b038516815283602082015260806040820152600083518060808401526110bf8160a0850160208801610f09565b601f01601f1916820160a0019050600283106110eb57634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b60006020828403121561110c57600080fd5b81518015158114610b2a57600080fdfea2646970667358221220685fea0e25131652b629a46a157c92f41ca93dbf9cdf1d74327ea198cca7758164736f6c63430008110033";

type SXAvatarExecutorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SXAvatarExecutorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SXAvatarExecutor__factory extends ContractFactory {
  constructor(...args: SXAvatarExecutorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _target: PromiseOrValue<string>,
    _starknetCore: PromiseOrValue<string>,
    _executionRelayer: PromiseOrValue<BigNumberish>,
    _starknetSpaces: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SXAvatarExecutor> {
    return super.deploy(
      _owner,
      _target,
      _starknetCore,
      _executionRelayer,
      _starknetSpaces,
      overrides || {}
    ) as Promise<SXAvatarExecutor>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _target: PromiseOrValue<string>,
    _starknetCore: PromiseOrValue<string>,
    _executionRelayer: PromiseOrValue<BigNumberish>,
    _starknetSpaces: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _target,
      _starknetCore,
      _executionRelayer,
      _starknetSpaces,
      overrides || {}
    );
  }
  override attach(address: string): SXAvatarExecutor {
    return super.attach(address) as SXAvatarExecutor;
  }
  override connect(signer: Signer): SXAvatarExecutor__factory {
    return super.connect(signer) as SXAvatarExecutor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SXAvatarExecutorInterface {
    return new utils.Interface(_abi) as SXAvatarExecutorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SXAvatarExecutor {
    return new Contract(address, _abi, signerOrProvider) as SXAvatarExecutor;
  }
}
