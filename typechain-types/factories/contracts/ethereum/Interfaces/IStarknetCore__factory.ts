/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IStarknetCore,
  IStarknetCoreInterface,
} from "../../../../contracts/ethereum/Interfaces/IStarknetCore";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromAddress",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "payload",
        type: "uint256[]",
      },
    ],
    name: "consumeMessageFromL2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "msgHash",
        type: "bytes32",
      },
    ],
    name: "l2ToL1Messages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "to_address",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "selector",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "payload",
        type: "uint256[]",
      },
    ],
    name: "sendMessageToL2",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IStarknetCore__factory {
  static readonly abi = _abi;
  static createInterface(): IStarknetCoreInterface {
    return new utils.Interface(_abi) as IStarknetCoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStarknetCore {
    return new Contract(address, _abi, signerOrProvider) as IStarknetCore;
  }
}
